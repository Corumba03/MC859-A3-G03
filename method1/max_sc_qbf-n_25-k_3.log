Cost-Ratio Heuristic: found solution Solution: cost=[-9.18], size=[24], elements={0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
No improving move found, taking least bad move: (0, 12), solution cost: 16.87
(Iter. 0) best_sol = Solution: cost=[16.87], size=[23], elements={0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
No improving move found, taking least bad move: (0, 10), solution cost: 42.63
(Iter. 1) best_sol = Solution: cost=[42.63], size=[22], elements={0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
No improving move found, taking least bad move: (-1, 0), solution cost: 58.47
(Iter. 2) best_sol = Solution: cost=[58.47], size=[21], elements={1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
No improving move found, taking least bad move: (1, 14), solution cost: 82.30
(Iter. 3) best_sol = Solution: cost=[82.30], size=[20], elements={1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
No improving move found, taking least bad move: (1, 13), solution cost: 96.37
(Iter. 4) best_sol = Solution: cost=[96.37], size=[19], elements={1, 3, 4, 5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
No improving move found, taking least bad move: (1, 19), solution cost: 108.42
(Iter. 5) best_sol = Solution: cost=[108.42], size=[18], elements={1, 3, 4, 5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 20, 21, 22, 23, 24}
No improving move found, taking least bad move: (1, 20), solution cost: 110.32
(Iter. 6) best_sol = Solution: cost=[110.32], size=[17], elements={1, 3, 4, 5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 21, 22, 23, 24}
No improving move found, taking least bad move: (3, 6), solution cost: 109.96
No improvement in iteration 7. No improvement count: 1
No improving move found, taking least bad move: (20, -1), solution cost: 108.42
No improvement in iteration 8. No improvement count: 2
No improving move found, taking least bad move: (4, 23), solution cost: 108.07
No improvement in iteration 9. No improvement count: 3
No improving move found, taking least bad move: (2, -1), solution cost: 103.76
No improvement in iteration 10. No improvement count: 4
No improving move found, taking least bad move: (5, 8), solution cost: 102.45
No improvement in iteration 11. No improvement count: 5
No improving move found, taking least bad move: (6, 11), solution cost: 99.83
No improvement in iteration 12. No improvement count: 6
No improving move found, taking least bad move: (19, -1), solution cost: 98.27
No improvement in iteration 13. No improvement count: 7
No improving move found, taking least bad move: (13, -1), solution cost: 96.25
No improvement in iteration 14. No improvement count: 8
No improving move found, taking least bad move: (7, 15), solution cost: 96.02
No improvement in iteration 15. No improvement count: 9
No improving move found, taking least bad move: (8, 9), solution cost: 94.98
No improvement in iteration 16. No improvement count: 10
No improving move found, taking least bad move: (10, -1), solution cost: 94.43
No improvement in iteration 17. No improvement count: 11
No improving move found, taking least bad move: (9, 18), solution cost: 91.63
No improvement in iteration 18. No improvement count: 12
No improving move found, taking least bad move: (14, -1), solution cost: 86.49
No improvement in iteration 19. No improvement count: 13
No improving move found, taking least bad move: (-1, 5), solution cost: 85.77
No improvement in iteration 20. No improvement count: 14
No improving move found, taking least bad move: (-1, 3), solution cost: 79.42
No improvement in iteration 21. No improvement count: 15
No improving move found, taking least bad move: (12, -1), solution cost: 72.47
No improvement in iteration 22. No improvement count: 16
No improving move found, taking least bad move: (-1, 1), solution cost: -inf
No improvement in iteration 23. No improvement count: 17
No improving move found, taking least bad move: (-1, 4), solution cost: -inf
No improvement in iteration 24. No improvement count: 18
No improving move found, taking least bad move: (-1, 7), solution cost: -inf
No improvement in iteration 25. No improvement count: 19
No improving move found, taking least bad move: (11, 16), solution cost: -inf
No improvement in iteration 26. No improvement count: 20
No improving move found, taking least bad move: (15, 17), solution cost: -inf
No improvement in iteration 27. No improvement count: 21
No improving move found, taking least bad move: (16, 21), solution cost: -inf
No improvement in iteration 28. No improvement count: 22
No improving move found, taking least bad move: (17, 22), solution cost: -inf
No improvement in iteration 29. No improvement count: 23
No improving move found, taking least bad move: (18, 24), solution cost: -inf
No improvement in iteration 30. No improvement count: 24
Traceback (most recent call last):
  File "C:\Users\tonio\MO824\A3\MC859-A3-G03 - Copia (4)\main.py", line 55, in <module>
    main()
  File "C:\Users\tonio\MO824\A3\MC859-A3-G03 - Copia (4)\main.py", line 48, in main
    solution = solver.solve()
               ^^^^^^^^^^^^^^
  File "C:\Users\tonio\MO824\A3\MC859-A3-G03 - Copia (4)\TabuSearch\metaheuristics\AbstractTS.py", line 254, in solve
    self.neighborhood_move()
  File "C:\Users\tonio\MO824\A3\MC859-A3-G03 - Copia (4)\TabuSearch\metaheuristics\TS.py", line 302, in neighborhood_move
    best_candidate, move = self.local_search_best(neighborhood)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\tonio\MO824\A3\MC859-A3-G03 - Copia (4)\TabuSearch\metaheuristics\TS.py", line 238, in local_search_best
    print(f'No improving move found, taking least bad move: {move}, solution cost: {least_bad.cost if least_bad else "N/A":.2f}')
                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Unknown format code 'f' for object of type 'str'

--- Finished in 0.24 seconds ---
